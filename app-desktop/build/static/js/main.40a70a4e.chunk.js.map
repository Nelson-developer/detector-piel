{"version":3,"sources":["components/Navegation.js","components/card-disable.js","components/Configuracion.js","components/Grafico.js","components/Tabla.js","App.js","serviceWorker.js","index.js"],"names":["Navegation","id","to","title","xmlns","viewBox","fill","width","height","d","enableBackground","CardDisable","className","src","alt","Configuracion","class","Grafico","useState","imagen","setimagen","urlImage","seturlImage","nameImagen","setnameImagen","predicciones","setpredicciones","cargando","setcargando","processFile","e","preventDefault","target","files","type","console","log","name","reader","FileReader","readAsDataURL","onload","result","alert","subirImagen","formData","FormData","append","axios","method","url","data","headers","then","res","predicionesCortada","prediccion","substr","split","catch","err","Spinner","props","carga","role","onChange","onClick","labels","datasets","label","backgroundColor","borderColor","Tabla","placeholder","v-model","scope","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.40a70a4e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link} from \"react-router-dom\";\n\n\nconst Navegation = () => {\n    return (\n    <div id=\"content\">\n      <Link to=\"/\" title=\"Grafica\">\n        <span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><path d=\"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" /></svg>          </span>\n      </Link>\n      <Link to=\"/tabla\" title=\"Tabla\">\n        <span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z\" /></svg>\n          </span>\n        </Link>\n      <Link to=\"/\" title=\"Calendario\">\n        <span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><path d=\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </span>\n      </Link>\n      <Link to=\"/configuracion\" title=\"Configuracion\">\n        <span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /><path d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\" /></g></svg>\n        </span>\n      </Link>\n      </div>\n  )\n}\n\nexport default Navegation\n","import React from 'react'\n\nfunction CardDisable() {\n  return (\n    <div className=\"izquierda\">\n      <div className=\"cards\">\n        <div>\n          <div className=\"card__image-holder\">\n            <img className=\"card__image\" src=\"https://source.unsplash.com/300x225/?wave\" alt=\"wave\" />\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default CardDisable\n","import React from 'react'\nimport Navegation from './Navegation'\nimport CardDisable from \"./card-disable\";\nconst Configuracion = () => {\n  return (\n    <section class=\"content\">\n    <CardDisable/>\n    <div className=\"derecha\">\n    <Navegation/>\n    <h1>Hello Lorem ipsum dolor sit amet consectetur adipisicing elit. Nihil laborum sint nam, labore sed, consequuntur accusamus perspiciatis velit non neque illum sapiente quia delectus? Dignissimos qui magni distinctio magnam illo.</h1>\n    </div>\n    </section>\n  )\n}\n\nexport default Configuracion\n","import React, { useState } from 'react'\nimport Navegation from './Navegation'\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from \"axios\";\nexport default function Grafico() {\n\n  const [imagen, setimagen] = useState(\"\");\n  const [urlImage, seturlImage] = useState(\"\");\n  const [nameImagen, setnameImagen] = useState(\"\");\n  const [predicciones, setpredicciones] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [cargando, setcargando] = useState(false);\n\n  let processFile = (e) => {\n    //console.log(e.target.files[0].type);\n    e.preventDefault()\n    //validand0 el tipo de archivo\n    if (e.target.files[0].type === \"image/jpg\" || e.target.files[0].type === \"image/jpeg\") {\n      console.log('cumplido');\n      setimagen(e.target.files[0])\n      setnameImagen(e.target.files[0].name)\n      //convierto la imagen en url para poder mostrarla en la interfaz\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onload = e => {\n        e.preventDefault();\n        seturlImage(e.target.result)\n      };\n    } else {\n      alert('archivo no valido')\n    }\n\n  }\n\n  const subirImagen = (e) => {\n    e.preventDefault() // Stop form submit\n    if (imagen === \"\") {\n      alert('selecciona un archivo')\n    }else{\n      let formData = new FormData()\n      formData.append('imagen', imagen)\n      setcargando(true) // muestro el spinner\n    axios({ method: 'post', url: 'http://localhost:4000/prueba', data: formData, headers: { 'Content-Type': 'multipart/form-data' } })\n    .then(res => {\n      let prediccion = res.data.prediccion\n      let data = prediccion.substr(1, 77)\n      let predicionesCortada = data.split(\" \", 8)\n      setpredicciones(predicionesCortada)\n      setcargando(false) //detengo la carga porque obtengo la prediccion\n    })\n    .catch(err => console.log(err));\n  }\n  }\n\n  // si esta cargando muestra el spinner verde\n  function Spinner(props) {\n    const isCargando = props.carga;\n    if (isCargando) {\n      return (\n        //muestra el spinner\n        <div className=\"izquierda\">\n          <div class=\"d-flex justify-content-center text-success\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n          <h5 className=\"carga-text\">Obteniendo prediccion...</h5>\n        </div>\n      )\n    }\n    return (\n      // sino muestra la carta\n      <div className=\"izquierda\">\n        <div className=\"cards\">\n          <div>\n            {urlImage ? // si hay una url de imagen la muestra\n              <div className=\"card__image-holder\">\n                <img className=\"card__image\" src={urlImage} alt=\"wave\" height=\"240\" width=\"300\" />\n              </div> :\n              <div></div>\n            }\n          </div>\n          <div className=\"card-actions\">\n            <h2>{nameImagen}</h2>\n          </div>\n        </div>\n\n        <h1>File Upload</h1>\n        <input type=\"file\" name=\"imagen\" onChange={processFile} />\n        <button onClick={subirImagen}>Upload</button>\n      </div>\n    )\n  }\n\n\n  // lo que se muestra en pantalla\n  return (\n    <section className=\"content\">\n      {/* Carta */}\n      <Spinner carga={cargando} />\n      {/* Grafico de barras */}\n      <div className=\"derecha\">\n        <Navegation />\n        <Doughnut data={{\n          labels: [\"Acné\", \"Cancer de piel\", \"Esclerodermia\", \"Herpes\", \"Pie de atleta\", \"Pie sano\", \"Rostro sano\"],\n          datasets: [{\n            label: 'Resultad0',\n            backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', 'yellow', \"#24de2a\", \"#49046b\", \"pink\"],\n            borderColor: 'rgb(255, 99, 132)',\n            data: predicciones\n          }]\n        }} />\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport Navegation from './Navegation'\nimport CardDisable from \"./card-disable\";\n\nconst Tabla = () => {\n  return (\n    <section class=\"content\">\n    <CardDisable/>\n    <div className=\"tabla\">\n          <Navegation/>\n          <div class=\"input-group mb-3\">\n         <input\n          type=\"search\"\n          class=\"form-control\"\n          placeholder=\"Buscar\"\n          v-model=\"filtroUsuarios\"\n        />\n      </div>\n    <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Enfermedad</th>\n            <th scope=\"col\">Probabilidad</th>\n            <th scope=\"col\">Fecha</th>\n            <th scope=\"col\">Imagen</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>prueba</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>prueba</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>prueba</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>prueba</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td><button type=\"button\" className=\"btn btn-outline-success btn-block\">Ver Imagen</button> </td>\n          </tr>\n          \n        </tbody>\n      </table>\n   </div>\n   </section>\n  )\n}\n\nexport default Tabla\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Configuracion from './components/Configuracion';\nimport Grafico from './components/Grafico';\nimport Tabla from './components/Tabla';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n      <Route path=\"/tabla\">\n        <Tabla/>\n        </Route>\n        <Route path=\"/configuracion\">\n        <Configuracion/>\n        </Route>\n        <Route path=\"/\">\n        <Grafico/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}